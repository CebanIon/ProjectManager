@using ProjectManager.Application.Common.Interfaces;
@inject ICurrentUserService currentUserService
<!DOCTYPE html>
<html lang="en" style="height:100%">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ProjectManager</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.min.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/ProjectManager.MVC.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/ContextMenu/jquery.contextMenu.min.css">
    <style>
        @@keyframes rotation {
          from {
            transform: rotate(0deg);
          }
          to {
            transform: rotate(359deg);
          }
        }
        #loadingImg {
            animation: rotation 2s infinite linear;
        }
    </style>
</head>
<body class="h-100">
    <header>
        <partial name="~/Views/Shared/_NavBar.cshtml" />
    </header>
    <div id="loader" class="position-absolute top-50 start-50 translate-middle" style="width:150px; height : 150px; display: none; z-index: 10;">
        <img id="loadingImg" src="~/images/load-icon.png" style="width:150px; height : 150px;" />
    </div>
    @RenderBody()

    <footer class="footer text-muted">
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <link rel="stylesheet" href="~/DataTables/datatables.min.css" />
    <script type="text/javascript" src="~/DataTables/datatables.min.js"></script>
    <script type="text/javascript" src="~/ContextMenu/jquery.contextMenu.min.js"></script>
    <script type="text/javascript" src="~/ContextMenu/jquery.ui.position.js"></script>
    <script type="text/javascript" src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script type="text/javascript" src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <script>
        function startLoading(){
            $("#loader").show();
        }

        function endLoading() {
            $("#loader").hide();
        }

        function userpageLoad() {
            console.log("Loaded");
            let table = $('#userTable').DataTable({
                processing: true,
                serverSide: true,
                "ajax": {
                    url: "User/GetAllUsers",
                    type: "POST"
                },
                "columns": [
                    { "data": "id", title: "Id", name: "id", visible: false },
                    { "data": "userName", title: "UserName", name: "userName" },
                    { "data": "firstName", title: "FirstName", name: "firstName" },
                    { "data": "lastName", title: "LastName", name: "lastName" },
                    { "data": "email", title: "Email", name: "email" },
                    { "data": "isEnabled", title: "IsEnabled", name: "isEnabled" },
                    { "data": "role", title: "Role", name: "role" }
                ]
            });
            let contextmenu = $('#userTable').contextMenu({
                selector: 'tr',
                trigger: 'right',
                callback: function (key, options) {
                    console.log(table);
                    console.log(table.rows());
                    let row = table.row(options.$trigger);
                    console.log(row.data());
                    switch (key) {
                        case 'details':
                            gotToUserDetailsPage(row.data()["id"]);
                            break;
                        case 'edit':
                            gotToUserEditPage(row.data()["id"]);
                            break;
                        default:
                            break
                    }
                },
                items: {
                    "edit": { name: "Edit" },
                    "details": { name: "Details" }
                }
            })
        };
        function gotToUserCreate(){
            startLoading();
            $.ajax({
                url: "@Url.Action("Create","User")",
                xhrFields: {
                    withCredentials: true
                },
                method: "GET",
                success: function (response) {
                    $('#contentDiv').html(null);
                    $('#contentDiv').html(response);
                    $("form").removeData("validator");
                    $("form").removeData("unobtrusiveValidation");
                    $.validator.unobtrusive.parse("form");
                    endLoading();
                }
            });
        
        };
        function createUser() {
            var form = $("#createUserForm");
            if (form.valid()) {
                startLoading();
                var url = form.attr('action');

                $.ajax({
                    url: url,
                    xhrFields: {
                        withCredentials: true
                    },
                    data: form.serialize(),
                    method: "POST",
                    success: function (response) {
                        $('#contentDiv').html(null);
                        $('#contentDiv').html(response);
                        $("form").removeData("validator");
                        $("form").removeData("unobtrusiveValidation");
                        $.validator.unobtrusive.parse("form");
                        endLoading();
                    },
                    error: function (response) {
                        $('#contentDiv').html(null);
                        $('#contentDiv').html(response);
                        $("form").removeData("validator");
                        $("form").removeData("unobtrusiveValidation");
                        $.validator.unobtrusive.parse("form");
                        endLoading();
                    }
                })
            }
        };

        function modifyUser(userId) {
            var form = $("#edituserForm");
            if(form.valid()){
                startLoading();
                var url = form.attr('action');

                $.ajax({
                    url: url,
                    xhrFields: {
                        withCredentials: true
                    },
                    data: form.serialize(),
                    method: "POST",
                    success: function (response) {
                        $('#contentDiv').html(response);
                        $("form").removeData("validator");
                        $("form").removeData("unobtrusiveValidation");
                        $.validator.unobtrusive.parse("form");
                        endLoading();
                    },
                    error: function (response){
                        $('#contentDiv').html(response);
                        $("form").removeData("validator");
                        $("form").removeData("unobtrusiveValidation");
                        $.validator.unobtrusive.parse("form");
                        endLoading();
                    }
                })
            };
        }
        function userEditLoad() {
        };

        function goToEditProject(projectId){
            startLoading();
            $.ajax({
                url: "@Url.Action("EditProject","TaskManager")",
                data: {
                    projectId: projectId
                },
                xhrFields: {
                    withCredentials: true
                },
                method: "GET",
                success: function (response) {
                    $('#taskManagerContent').html(null);
                    $('#taskManagerContent').html(response);
                    $("form").removeData("validator");
                    $("form").removeData("unobtrusiveValidation");
                    $.validator.unobtrusive.parse("form");
                    endLoading();
                }
            });
        }
        function goToprojectDetails(projectId) {
            startLoading();
            $.ajax({
                url: "@Url.Action("ProjectDetails","TaskManager")",
                data: {
                    projectId: projectId
                },
                xhrFields: {
                    withCredentials: true
                },
                method: "GET",
                success: function (response) {
                    $('#taskManagerContent').html(null);
                    $('#taskManagerContent').html(response);
                    endLoading();
                }
            });
        }

        function gotToUserEditPage(userId){
            startLoading();
            $.ajax({
                url: "@Url.Action("EditUser","User")",
                xhrFields: {
                    withCredentials: true
                },
                data: {
                    userId: userId
                },
                method: "GET",
                success: function (response) {
                    $('#contentDiv').html(response);
                    $("form").removeData("validator");
                    $("form").removeData("unobtrusiveValidation");
                    $.validator.unobtrusive.parse("form");
                    endLoading();
                }
            });
        }

        function gotToUserDetailsPage(userId) {
            startLoading();
            $.ajax({
                url: "@Url.Action("UserDetails","User")",
                xhrFields: {
                    withCredentials: true
                },
                data: {
                    userId: userId
                },
                method: "GET",
                success: function (response) {
                    $('#contentDiv').html(response);
                    endLoading();
                }
            });
        }

        function goToUserIndex(){
            startLoading();
            $.ajax({
                url: "@Url.Action("Index","User")",
                xhrFields: {
                    withCredentials: true
                },
                method: "GET",
                success: function (response) {
                    $('#contentDiv').html(null);
                    $('#contentDiv').html(response);
                    endLoading();
                    userpageLoad();
                }
            });
        }

        function loadTaskManagerMenu() {
            startLoading();
            $.ajax({
                url: "@Url.Action("TaskManagerMenu","TaskManager")",
                xhrFields: {
                    withCredentials: true
                },
                method: "GET",
                success: function (response) {
                    $('#taskManagerMenu').html(null);
                    $('#taskManagerMenu').html(response);
                    endLoading();
                }
            });
        }

        function editTogle() {
            let editMode = document.querySelector('#editCheckBox').checked;
            console.log(editMode);

            let elements = document.getElementsByClassName('visibleIfEditClass');
            [].forEach.call(elements, function (el) {
                if (editMode) {
                    el.style.display = "block";
                }
                else {
                    el.style.display = "none";
                }
            });
            elements = document.getElementsByClassName('writeIfEditClass');
            [].forEach.call(elements, function (el) {
                el.disabled = !editMode;
            });
        }

        function RemoveUserFromTask(userId, taskId) {
            startLoading();
            $.ajax({
                url: "/TaskManager/RemoveUserFromTask?taskId=" + taskId + "&userId=" + userId,
                type: "POST",
                success: function (result) {
                    endLoading();
                    gotToUserEditPage(userId);
                }
            });
        }
        function RemoveUserFromTaskProject(userId, taskId) {
            startLoading();
            $.ajax({
                url: "/TaskManager/RemoveUserFromTask?taskId=" + taskId + "&userId=" + userId,
                type: "POST",
                success: function (result) {
                    endLoading();
                    goToTaskEdit(taskId);
                }
            });
        }
        function RemoveUserFromProject(projectId, userId) {
            startLoading();
            $.ajax({
                url: "/TaskManager/RemoveUserFromProject?projectId=" + projectId + "&userId=" + userId,
                type: "POST",
                success: function (result) {
                    endLoading();
                    gotToUserEditPage(userId);
                }
            });
        }
        function RemoveUserFromProjectProjectPage(projectId, userId) {
            startLoading();
            $.ajax({
                url: "/TaskManager/RemoveUserFromProject?projectId=" + projectId + "&userId=" + userId,
                type: "POST",
                success: function (result) {
                    endLoading();
                    goToEditProject(projectId);
                }
            });
        }
        function goToTaskManagerIndex() {
            startLoading();
            $.ajax({
                url: "@Url.Action("Index","TaskManager")",
                xhrFields: {
                    withCredentials: true
                },
                method: "GET",
                success: function (response) {
                    $('#contentDiv').html(null);
                    $('#contentDiv').html(response);
                    endLoading();
                    loadTaskManagerMenu();
                }
            });
        }
        function goToTaskManagerCreateProject() {
            startLoading();
            $.ajax({
                url: "@Url.Action("CreateProject","TaskManager")",
                xhrFields: {
                    withCredentials: true
                },
                method: "GET",
                success: function (response) {
                    $('#contentDiv').html(null);
                    $('#contentDiv').html(response);
                    $("form").removeData("validator");
                    $("form").removeData("unobtrusiveValidation");
                    $.validator.unobtrusive.parse("form");
                    endLoading();
                }
            });
        }
        function createProject(){
            var form = $("#createProjectForm");
            if (form.valid()) {
                startLoading();
                var url = form.attr('action');

                $.ajax({
                    url: url,
                    xhrFields: {
                        withCredentials: true
                    },
                    data: form.serialize(),
                    method: "POST",
                    success: function (response) {
                        $('#contentDiv').html(response);
                        $("form").removeData("validator");
                        $("form").removeData("unobtrusiveValidation");
                        $.validator.unobtrusive.parse("form");
                        endLoading();
                    },
                    error: function (response) {
                        $('#contentDiv').html(response);
                        $("form").removeData("validator");
                        $("form").removeData("unobtrusiveValidation");
                        $.validator.unobtrusive.parse("form");
                        endLoading();
                    }
                })
            };
        }
        function taskManagerLoadProject(projectId) {
                    let table = $('#example').DataTable({
                        processing: true,
                        serverSide: true,
                        "ajax": {
                            url: "TaskManager/ReturnData",
                            data:{
                                projectId: projectId
                            },
                            type: "POST"
                        },
                        "columns": [
                    { data: "id", title: "Id", name: "id", visible: false },
                            { data: "name", title: "Name", name: "name" },
                            { data: "description", title: "Description", name: "description" },
                            { data: "taskType", title: "TaskType", name: "taskType" },
                            { data: "priority", title: "Priority", name: "priority" },
                            { data: "taskState", title: "State", name: "taskState" }
                        ]
                    });
                    let contextmenu = $('#example').contextMenu({
                        selector: 'tr',
                        trigger: 'right',
                        callback: function (key, options) {
                            var row = table.row(options.$trigger)
                            switch (key) {
                                case 'edit':
                                    goToTaskEdit(row.data()["id"]);
                                    break;
                                 case 'details':
                                    goToTaskDetails(row.data()["id"]);
                                    break;
                                case 'delete':
                                    deleteTask(row.data()["id"]);
                                    table.ajax.reload();
                                    break;
                                default:
                                    break
                            }
                        },
                        items: {
                            "edit": { name: "Edit" },
                            "details": { name: "Details" },
                            "delete": { name: "Delete" },
                        }
                    })
        }

        function deleteTask(taskId) {
            startLoading();
            $.ajax({
                url: "/TaskManager/DeleteTask?taskId=" + taskId,
                type: "POST",
                async:false,
                done: function (result) {
                    endLoading();
                    console.log(result);                    
                }
            });
        }

        function goToTaskDetails(taskId) {
            startLoading();
            $.ajax({
                url: "@Url.Action("TaskDetails","TaskManager")",
                data: {
                    taskId: taskId
                },
                xhrFields: {
                    withCredentials: true
                },
                method: "GET",
                success: function (response) {
                    $('#taskManagerContent').html(null);
                    $('#taskManagerContent').html(response);
                    endLoading();
                }
            });
        }

        function goToTaskEdit(taskId) {
            startLoading();
            $.ajax({
                url: "@Url.Action("EditTask","TaskManager")",
                data: {
                    taskId: taskId
                },
                xhrFields: {
                    withCredentials: true
                },
                method: "GET",
                success: function (response) {
                    $('#taskManagerContent').html(null);
                    $('#taskManagerContent').html(response);
                    $("form").removeData("validator");
                    $("form").removeData("unobtrusiveValidation");
                    $.validator.unobtrusive.parse("form");
                    endLoading();
                }
            });
        }

        function goToProject(projectId){
            startLoading();
            $.ajax({
                url: "@Url.Action("IndexContent","TaskManager")",
                data : {
                    projectId: projectId
                },
                xhrFields: {
                    withCredentials: true
                },
                method: "GET",
                success: function (response) {
                    $('#taskManagerContent').html(null);
                    $('#taskManagerContent').html(response);
                    $("form").removeData("validator");
                    $("form").removeData("unobtrusiveValidation");
                    $.validator.unobtrusive.parse("form");
                    endLoading();
                    taskManagerLoadProject(projectId);
                }
            });
        }
        function goToCreateTask(projectId){
            startLoading();
            $.ajax({
                url: "@Url.Action("CreateTask","TaskManager")",
                data: {
                    projectId: projectId
                },
                xhrFields: {
                    withCredentials: true
                },
                method: "GET",
                success: function (response) {
                    $('#taskManagerContent').html(null);
                    $('#taskManagerContent').html(response);
                    $("form").removeData("validator");
                    $("form").removeData("unobtrusiveValidation");
                    $.validator.unobtrusive.parse("form");
                    endLoading();
                }
            });
        }
        function createTask(projectId) {
            var form = $("#createTaskForm");
            if (form.valid()) {
                startLoading();
                var url = form.attr('action');

                $.ajax({
                    url: url,
                    xhrFields: {
                        withCredentials: true
                    },
                    data: form.serialize(),
                    method: "POST",
                    success: function (response) {
                        $('#taskManagerContent').html(response);
                        $("form").removeData("validator");
                        $("form").removeData("unobtrusiveValidation");
                        $.validator.unobtrusive.parse("form");
                        taskManagerLoadProject(projectId);
                        endLoading();
                    },
                    error: function (response) {
                        $('#taskManagerContent').html(response);
                        $("form").removeData("validator");
                        $("form").removeData("unobtrusiveValidation");
                        $.validator.unobtrusive.parse("form");
                        endLoading();
                    }
                })
            };
        }

        function modifyProject(projectId) {
            var form = $("#modifyProjectForm");
            if (form.valid()) {
                startLoading();
                var url = form.attr('action');

                $.ajax({
                    url: url,
                    xhrFields: {
                        withCredentials: true
                    },
                    data: form.serialize(),
                    method: "POST",
                    success: function (response) {
                        $('#taskManagerContent').html(response);
                        $("form").removeData("validator");
                        $("form").removeData("unobtrusiveValidation");
                        $.validator.unobtrusive.parse("form");
                        endLoading();
                        loadTaskManagerMenu();
                    },
                    error: function (response) {
                        $('#taskManagerContent').html(response);
                        $("form").removeData("validator");
                        $("form").removeData("unobtrusiveValidation");
                        $.validator.unobtrusive.parse("form");
                        endLoading();
                        loadTaskManagerMenu();
                    }
                })
            };
        }

        function modifyTask(taskId) {
            var form = $("#modifyTaskForm");
            if (form.valid()) {
                startLoading();
                var url = form.attr('action');

                $.ajax({
                    url: url,
                    xhrFields: {
                        withCredentials: true
                    },
                    data: form.serialize(),
                    method: "POST",
                    success: function (response) {
                        $('#taskManagerContent').html(response);
                        $("form").removeData("validator");
                        $("form").removeData("unobtrusiveValidation");
                        $.validator.unobtrusive.parse("form");
                        endLoading();
                    },
                    error: function (response) {
                        $('#taskManagerContent').html(response);
                        $("form").removeData("validator");
                        $("form").removeData("unobtrusiveValidation");
                        $.validator.unobtrusive.parse("form");
                        endLoading();
                    }
                })
            };
        }

        function adduserToProject(projectId) {
            var form = $("#adduserToProjectForm");
            if (form.valid()) {
                startLoading();
                var url = form.attr('action');

                $.ajax({
                    url: url,
                    xhrFields: {
                        withCredentials: true
                    },
                    data: form.serialize(),
                    method: "POST",
                    success: function (response) {
                        endLoading();
                        goToEditProject(projectId);
                    }
                })
            };
        }

        function addUserToTask(taskId) {
            var form = $("#addUserToTaskForm");
            if (form.valid()) {
                startLoading();
                var url = form.attr('action');

                $.ajax({
                    url: url,
                    xhrFields: {
                        withCredentials: true
                    },
                    data: form.serialize(),
                    method: "POST",
                    success: function (response) {
                        endLoading();
                        goToTaskEdit(taskId);
                    }
                })
            };
        }
</script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
